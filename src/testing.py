import tensorflow as tf

def build_model(
        # input_shape: tuple[int, int],
        #     window_shape: float = 0.2,
        #     trainable_window: bool = False,
        #     sample_rate: float = 2048.,
        #     degree_filt: int = 8,
        #     f_band_filt: Tuple[float, float] = (20., 500.),
        #     trainable_filt: bool = False,
        #     hop_length: int = 64,
        #     f_band_spec: Tuple[float, float] = (20., 500.),
        #     bins_per_octave: int = 12,
        #     window_cqt: str = "hann",
        #     perc_range: float = 0.01,
        #     trainable_cqt: bool = False,
        #     resize_shape: Tuple[int, int] = (128, 128),
        #     p_perm: float = 0.1,
        #     p_mask: float = 0.1,
        #     n_max_mask_t = 2,
        #     w_mask_t: Tuple[int, int] = (12, 25),
        #     n_max_mask_f = 2,
        #     w_mask_f: Tuple[int, int] = (12, 25),
        #     dtype: type = tf.float32,
        #     strategy: str = "TPU",
        #     effnet_id: str = "efficientnetv2-b7",
        #     weights: str = "imagenet",
        #     learning_rate: float = 0.001
        # ) -> tf.keras.Model:
            input_shape = tuple(),
            window_shape = 0.2,
            trainable_window = False,
            sample_rate = 2048.,
            degree_filt = 8,
            f_band_filt = (20., 500.),
            trainable_filt = False,
            hop_length = 64,
            f_band_spec = (20., 500.),
            bins_per_octave = 12,
            window_cqt= "hann",
            perc_range = 0.01,
            trainable_cqt = False,
            resize_shape = (128, 128),
            p_perm = 0.1,
            p_mask = 0.1,
            n_max_mask_t = 2,
            w_mask_t = (12, 25),
            n_max_mask_f = 2,
            w_mask_f = (12, 25),
            dtype =  tf.float32,
            strategy = "TPU",
            effnet_id = "efficientnetv2-b7",
            weights = "imagenet",
            learning_rate = 0.001):

    return None